{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Terix\\\\Documents\\\\GitHub\\\\randombits\\\\src\\\\Components\\\\Scoreboard.jsx\";\nimport React, { useState } from \"react\";\nexport default function Scoreboard({\n  scoreValue\n}) {\n  const currentUser = localStorage.getItem(\"currentUser\");\n  const [thisUser, setThisUser] = useState(\"Guest\");\n  let num = 1;\n\n  const updateUser = () => {\n    console.log(\"user\", currentUser);\n    setThisUser(currentUser);\n  };\n\n  if (currentUser === null) {\n    console.log(\"Empty Data\");\n    setThisUser(\"Guest\");\n  } else {\n    console.log(\"Some Data Found\", currentUser);\n    setThisUser(currentUser);\n  } // const player = setThisUser(currentUser);\n  // Validation of User\n  // const validUser = () => {\n  //   if (currentUser !== \"undefined\" && currentUser !== null) {\n  //     return true;\n  //   }\n  // };\n  // Check User\n  // const newUser = () => {\n  //   if (validUser) {\n  //     return <td>{currentUser}</td>;\n  //   } else {\n  //     return <td>Guest</td>;\n  //   }\n  // };\n  // High Score\n\n\n  scoreValue.reverse();\n  const highScore = scoreValue.slice(0, 5).map(newScore => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, num++), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, thisUser), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, newScore)));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Score\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, highScore)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateUser,\n    className: \"btn btn-secondary text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Update\"));\n}","map":{"version":3,"sources":["C:/Users/Terix/Documents/GitHub/randombits/src/Components/Scoreboard.jsx"],"names":["React","useState","Scoreboard","scoreValue","currentUser","localStorage","getItem","thisUser","setThisUser","num","updateUser","console","log","reverse","highScore","slice","map","newScore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AACjD,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,OAAD,CAAxC;AACA,MAAIQ,GAAG,GAAG,CAAV;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,WAApB;AACAI,IAAAA,WAAW,CAACJ,WAAD,CAAX;AACD,GAHD;;AAKA,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAJ,IAAAA,WAAW,CAAC,OAAD,CAAX;AACD,GAHD,MAGO;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BR,WAA/B;AACAI,IAAAA,WAAW,CAACJ,WAAD,CAAX;AACD,GAhBgD,CAkBjD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,EAAAA,UAAU,CAACU,OAAX;AACA,QAAMC,SAAS,GAAGX,UAAU,CAACY,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,GAAvB,CAA4BC,QAAD,iBAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,GAAG,EAAR,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,QAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,QAAL,CAHF,CADgB,CAAlB;AAQA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGH,SAFH,CARF,CADF,eAcE;AAAQ,IAAA,OAAO,EAAEJ,UAAjB;AAA6B,IAAA,SAAS,EAAC,+BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,CADF;AAoBD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Scoreboard({ scoreValue }) {\r\n  const currentUser = localStorage.getItem(\"currentUser\");\r\n  const [thisUser, setThisUser] = useState(\"Guest\");\r\n  let num = 1;\r\n\r\n  const updateUser = () => {\r\n    console.log(\"user\", currentUser);\r\n    setThisUser(currentUser);\r\n  };\r\n\r\n  if (currentUser === null) {\r\n    console.log(\"Empty Data\");\r\n    setThisUser(\"Guest\");\r\n  } else {\r\n    console.log(\"Some Data Found\", currentUser);\r\n    setThisUser(currentUser);\r\n  }\r\n\r\n  // const player = setThisUser(currentUser);\r\n\r\n  // Validation of User\r\n  // const validUser = () => {\r\n  //   if (currentUser !== \"undefined\" && currentUser !== null) {\r\n  //     return true;\r\n  //   }\r\n  // };\r\n  // Check User\r\n  // const newUser = () => {\r\n  //   if (validUser) {\r\n  //     return <td>{currentUser}</td>;\r\n  //   } else {\r\n  //     return <td>Guest</td>;\r\n  //   }\r\n  // };\r\n  // High Score\r\n  scoreValue.reverse();\r\n  const highScore = scoreValue.slice(0, 5).map((newScore) => (\r\n    <tr>\r\n      <th>{num++}</th>\r\n      <th>{thisUser}</th>\r\n      <td>{newScore}</td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr className=\"table-info\">\r\n            <th>#</th>\r\n            <th>User</th>\r\n            <th>Score</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {validUser && <td>{currentUser}</td>} */}\r\n          {highScore}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={updateUser} className=\"btn btn-secondary text-center\">\r\n        Update\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}