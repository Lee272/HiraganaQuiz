{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Terix\\\\Documents\\\\GitHub\\\\randombits\\\\src\\\\Components\\\\Scoreboard.jsx\";\nimport React, { useState } from \"react\";\nexport default function Scoreboard({\n  scoreValue\n}) {\n  const currentUser = localStorage.getItem(\"currentUser\");\n  const [thisUser, setThisUser] = useState(\"Guest\");\n  let num = 1;\n\n  const updateUser = () => {\n    if (currentUser !== null || currentUser !== \"\") {\n      setThisUser(localStorage.getItem(\"currentUser\"));\n      console.log(\"user\", localStorage.getItem(\"currentUser\"));\n    } else setThisUser(\"guest\");\n\n    console.log(\"no data\", localStorage.getItem(\"currentUser\"));\n  }; // const player = setThisUser(currentUser);\n  // Validation of User\n  // const validUser = () => {\n  //   if (currentUser !== \"undefined\" && currentUser !== null) {\n  //     return true;\n  //   }\n  // };\n  // Check User\n  // const newUser = () => {\n  //   if (validUser) {\n  //     return <td>{currentUser}</td>;\n  //   } else {\n  //     return <td>Guest</td>;\n  //   }\n  // };\n  // High Score\n\n\n  scoreValue.reverse();\n  const highScore = scoreValue.slice(0, 5).map(newScore => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, num++), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, thisUser), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, newScore)));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Score\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, highScore)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateUser,\n    className: \"btn btn-secondary text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Update\"));\n}","map":{"version":3,"sources":["C:/Users/Terix/Documents/GitHub/randombits/src/Components/Scoreboard.jsx"],"names":["React","useState","Scoreboard","scoreValue","currentUser","localStorage","getItem","thisUser","setThisUser","num","updateUser","console","log","reverse","highScore","slice","map","newScore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AACjD,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,OAAD,CAAxC;AACA,MAAIQ,GAAG,GAAG,CAAV;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIN,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,EAA5C,EAAgD;AAC9CI,MAAAA,WAAW,CAACH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACD,KAHD,MAGOE,WAAW,CAAC,OAAD,CAAX;;AACPG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAvB;AACD,GAND,CALiD,CAajD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,EAAAA,UAAU,CAACU,OAAX;AACA,QAAMC,SAAS,GAAGX,UAAU,CAACY,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,GAAvB,CAA4BC,QAAD,iBAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,GAAG,EAAR,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,QAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,QAAL,CAHF,CADgB,CAAlB;AAQA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGH,SAFH,CARF,CADF,eAcE;AAAQ,IAAA,OAAO,EAAEJ,UAAjB;AAA6B,IAAA,SAAS,EAAC,+BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,CADF;AAoBD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Scoreboard({ scoreValue }) {\r\n  const currentUser = localStorage.getItem(\"currentUser\");\r\n  const [thisUser, setThisUser] = useState(\"Guest\");\r\n  let num = 1;\r\n\r\n  const updateUser = () => {\r\n    if (currentUser !== null || currentUser !== \"\") {\r\n      setThisUser(localStorage.getItem(\"currentUser\"));\r\n      console.log(\"user\", localStorage.getItem(\"currentUser\"));\r\n    } else setThisUser(\"guest\");\r\n    console.log(\"no data\", localStorage.getItem(\"currentUser\"));\r\n  };\r\n\r\n  // const player = setThisUser(currentUser);\r\n\r\n  // Validation of User\r\n  // const validUser = () => {\r\n  //   if (currentUser !== \"undefined\" && currentUser !== null) {\r\n  //     return true;\r\n  //   }\r\n  // };\r\n  // Check User\r\n  // const newUser = () => {\r\n  //   if (validUser) {\r\n  //     return <td>{currentUser}</td>;\r\n  //   } else {\r\n  //     return <td>Guest</td>;\r\n  //   }\r\n  // };\r\n  // High Score\r\n  scoreValue.reverse();\r\n  const highScore = scoreValue.slice(0, 5).map((newScore) => (\r\n    <tr>\r\n      <th>{num++}</th>\r\n      <th>{thisUser}</th>\r\n      <td>{newScore}</td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr className=\"table-info\">\r\n            <th>#</th>\r\n            <th>User</th>\r\n            <th>Score</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {validUser && <td>{currentUser}</td>} */}\r\n          {highScore}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={updateUser} className=\"btn btn-secondary text-center\">\r\n        Update\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}